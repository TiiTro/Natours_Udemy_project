.btn {
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem; /* rounded corners */
    transition: all .2s; /* simpler way of animation, makes the moves smoother for the button */
    position: relative;
    font-size: $default-font-size;
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);

    &::after {
      transform: scaleX(1.2) scaleY(1.5);
      opacity: 0;
    }
  }

  &--green {
    background-color: $color-primary;
    color: #fff;
  }

  &:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }

  &--white {
    background-color: #fff;
    color: $color-grey-dark;

    &::after {
      background-color: #fff;
    }
  }

  /* an after:: pseudo creates a copy of the element and places it behind the original one except when it's hovered --> can make cool effects. */
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* needs a reference, so the .btn needs to have positon: "relative;" */
    top: 0%;
    left: 0%;
    z-index: -1;
    transition: all, .4s;
  }

  &--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
  }
}

.button-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;

  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0);
  }
}
